{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nexport class AppComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.currenteUser$ = this.authService.currentUser$;\n  }\n\n  ngOnInit() {\n    this.authService.getCurrentUser().subscribe({\n      next: res => {\n        console.log(res);\n        this.authService.setCurrentUser(res);\n      },\n      error: err => {\n        this.authService.setCurrentUser({\n          email: 'teste@email.com',\n          username: 'Teste',\n          token: '1234',\n          id: 'teste'\n        });\n        console.log(err);\n      }\n    });\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 3,\n  vars: 3,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelement(2, \"router-outlet\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate1(\"Hello eltrello ---\", i0.ɵɵpipeBind1(1, 1, ctx.currenteUser$), \"\\n\");\n    }\n  },\n  directives: [i2.RouterOutlet],\n  pipes: [i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/020305631/Desktop/desenvolvimento/eltrello/eltrello/client/src/app/app.component.ts"],"names":["i0","i1","i2","i3","AppComponent","constructor","authService","currenteUser$","currentUser$","ngOnInit","getCurrentUser","subscribe","next","res","console","log","setCurrentUser","error","err","email","username","token","id","ɵfac","AppComponent_Factory","t","ɵɵdirectiveInject","AuthService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵtext","ɵɵpipe","ɵɵelement","ɵɵtextInterpolate1","ɵɵpipeBind1","directives","RouterOutlet","pipes","AsyncPipe","encapsulation"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,6BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,aAAL,GAAqB,KAAKD,WAAL,CAAiBE,YAAtC;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKH,WAAL,CAAiBI,cAAjB,GAAkCC,SAAlC,CAA4C;AACxCC,MAAAA,IAAI,EAAEC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKP,WAAL,CAAiBU,cAAjB,CAAgCH,GAAhC;AACH,OAJuC;AAKxCI,MAAAA,KAAK,EAAEC,GAAG,IAAI;AACV,aAAKZ,WAAL,CAAiBU,cAAjB,CAAgC;AAC5BG,UAAAA,KAAK,EAAE,iBADqB;AAE5BC,UAAAA,QAAQ,EAAE,OAFkB;AAG5BC,UAAAA,KAAK,EAAE,MAHqB;AAI5BC,UAAAA,EAAE,EAAE;AAJwB,SAAhC;AAMAR,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH;AAbuC,KAA5C;AAeH;;AArBqB;;AAuB1Bd,YAAY,CAACmB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIrB,YAAV,EAAwBJ,EAAE,CAAC0B,iBAAH,CAAqBzB,EAAE,CAAC0B,WAAxB,CAAxB,CAAP;AAAuE,CAA9H;;AACAvB,YAAY,CAACwB,IAAb,GAAoB,aAAc5B,EAAE,CAAC6B,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAE1B,YAAR;AAAsB2B,EAAAA,SAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAAjC;AAAiDC,EAAAA,KAAK,EAAE,CAAxD;AAA2DC,EAAAA,IAAI,EAAE,CAAjE;AAAoEC,EAAAA,QAAQ,EAAE,SAASC,qBAAT,CAA+BC,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACnLpC,MAAAA,EAAE,CAACsC,MAAH,CAAU,CAAV;AACAtC,MAAAA,EAAE,CAACuC,MAAH,CAAU,CAAV,EAAa,OAAb;AACAvC,MAAAA,EAAE,CAACwC,SAAH,CAAa,CAAb,EAAgB,eAAhB;AACH;;AAAC,QAAIJ,EAAE,GAAG,CAAT,EAAY;AACVpC,MAAAA,EAAE,CAACyC,kBAAH,CAAsB,oBAAtB,EAA4CzC,EAAE,CAAC0C,WAAH,CAAe,CAAf,EAAkB,CAAlB,EAAqBL,GAAG,CAAC9B,aAAzB,CAA5C,EAAqF,IAArF;AACH;AAAE,GANgD;AAM9CoC,EAAAA,UAAU,EAAE,CAACzC,EAAE,CAAC0C,YAAJ,CANkC;AAMfC,EAAAA,KAAK,EAAE,CAAC1C,EAAE,CAAC2C,SAAJ,CANQ;AAMQC,EAAAA,aAAa,EAAE;AANvB,CAArB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./auth/service/auth.service\";\r\nimport * as i2 from \"@angular/router\";\r\nimport * as i3 from \"@angular/common\";\r\nexport class AppComponent {\r\n    constructor(authService) {\r\n        this.authService = authService;\r\n        this.currenteUser$ = this.authService.currentUser$;\r\n    }\r\n    ngOnInit() {\r\n        this.authService.getCurrentUser().subscribe({\r\n            next: res => {\r\n                console.log(res);\r\n                this.authService.setCurrentUser(res);\r\n            },\r\n            error: err => {\r\n                this.authService.setCurrentUser({\r\n                    email: 'teste@email.com',\r\n                    username: 'Teste',\r\n                    token: '1234',\r\n                    id: 'teste'\r\n                });\r\n                console.log(err);\r\n            }\r\n        });\r\n    }\r\n}\r\nAppComponent.ɵfac = function AppComponent_Factory(t) { return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService)); };\r\nAppComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AppComponent, selectors: [[\"app-root\"]], decls: 3, vars: 3, template: function AppComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtext(0);\r\n        i0.ɵɵpipe(1, \"async\");\r\n        i0.ɵɵelement(2, \"router-outlet\");\r\n    } if (rf & 2) {\r\n        i0.ɵɵtextInterpolate1(\"Hello eltrello ---\", i0.ɵɵpipeBind1(1, 1, ctx.currenteUser$), \"\\n\");\r\n    } }, directives: [i2.RouterOutlet], pipes: [i3.AsyncPipe], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}